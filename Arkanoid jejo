import tkinter as tk
import random
win = tk.Tk()

#width, height
w = 600
h = 500
brick_w=50
brick_h=20
brick_count_x=12
brick_count_y=4
bricks=[]
#cell_list = []

canvas = tk.Canvas(width = w, height = h, bg = "white")
canvas.pack()

d=15
movement = [1*d,1*d]

farby = ["red", "purple", "orange","yellow","blue","green","black","magenta","turquoise"]
kruzok = canvas.create_oval(w/2-20,h/2-20,w/2,h/2, fill=random.choice(farby))


desk = canvas.create_rectangle(w/2-50, h-20, w/2+50, h, fill="black")


def ball_move():
    global movement
    destroy_brick()
    canvas.move(kruzok,movement[0],movement[1])
    canvas.itemconfig(kruzok, fill=random.choice(farby))
    if canvas.coords(kruzok)[0] < 0:
        movement[0] *= (-1)
    if canvas.coords(kruzok)[1] < 0:
        movement[1] *= (-1)
    if canvas.coords(kruzok)[2] > w:
        movement[0] *= (-1)
    if canvas.coords(kruzok)[3] > h:
        movement[1] *= (-1)
    canvas.after(50,ball_move)

def starter(e):
    global x
    zoz = canvas.find_overlapping(e.x, e.y, e.x+1, e.y+1)
    if desk in zoz:
        x = e.x
        ball_move()

def mover(e):
    global x
    if x != 0:
        mouse = e.x - x
        canvas.move(desk, mouse, 0)
        x = e.x
def checkkey(e):
    print("Stlacil som")
    print(e.char)
colours=['green','blue','yellow','red','orange']
def prepare_bricks():
    #win.
    for y in range(brick_count_y):
        f=colours[random.randint(0,4)]
        for x in range(brick_count_x):
            bricks.append(canvas.create_rectangle(x*brick_w, y*brick_h, x*brick_w+brick_w, y*brick_h+brick_h, fill=f, width=5, outline='white' ))
def destroy_brick():
    global movement
    coord_ball=canvas.coords(kruzok)
    print(coord_ball)
    items_list= canvas.find_overlapping(coord_ball[0],coord_ball[1],coord_ball[2],coord_ball[3])
    print(items_list)
    for i in items_list:
        if i in bricks:
            bricks.remove(i)
            canvas.delete(i)
            movement= [movement[0]*-1,movement[1]*-1]
            
prepare_bricks()
#canvas.focus_set()
#win.bind('<Key>',checkkey)
canvas.bind("<Button-1>", starter)
canvas.bind("<B1-Motion>", mover)
win.mainloop()
